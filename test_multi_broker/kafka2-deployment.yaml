apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: kafka2
  name: kafka2
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: kafka2
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.network/test-multi-broker-default: "true"
        io.kompose.service: kafka2
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 50
              preference:
                matchExpressions:
                - key: kubernetes.io/hostname
                  operator: In
                  values:
                    - "worker-node-2"
      containers:
        - env:
            - name: KAFKA_ADVERTISED_LISTENERS
              value: LISTENER_DOCKER_INTERNAL://kafka2:29092,LISTENER_DOCKER_EXTERNAL://192.168.56.62:9092
            - name: KAFKA_BROKER_ID
              value: "2"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: LISTENER_DOCKER_INTERNAL
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zookeeper:2181
          image: confluentinc/cp-kafka:5.3.0
          name: kafka-broker-2
          ports:
            - containerPort: 29092
              hostPort: 9092
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/kafka/data
              name: kafka2-claim0
      hostname: kafka2
      restartPolicy: Always
      volumes:
        - name: kafka2-claim0
          persistentVolumeClaim:
            claimName: kafka2-claim0